security:
    # https://symfony.com/doc/current/security/authenticator_manager.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: mailU
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            entry_point: App\Security\AuthentificationAuthenticator
            custom_authenticator: App\Security\AuthentificationAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
            form_login:
                login_path: app_login
                check_path: app_login
                default_target_path: profil
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: '^/admin', roles: ROLE_Administrateur }
         - { path: '^/role', roles: ROLE_Administrateur }
         - { path: '^/mod', roles: [ROLE_Administrateur, ROLE_Mod√©rateur] }
         - { path: '^/commande', roles: ROLE_Client }
         - { path: '^/eval', roles: ROLE_Client }
         - { path: '^/panier', roles: ROLE_Client }
         - { path: '^/resto/liste', roles: ROLE_Client }
         - { path: '^/resto/detail', roles: ROLE_Client }
         - { path: '^/resto/plats/panier', roles: ROLE_Client }
         - { path: '^/resto/plats/edit', roles: ROLE_Restaurateur }
         - { path: '^/restaurateur', roles: ROLE_Restaurateur }
         - { path: '^/resto/plats/new', roles: ROLE_Restaurateur }
         - { path: '^/typeplat', roles: ROLE_Restaurateur }
         - { path: '^/profil', roles: IS_AUTHENTICATED_FULLY }
